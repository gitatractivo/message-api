version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: messaging-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgres://postgres:postgres@db:5432/message_api
      - JWT_SECRET=your_jwt_secret_here
      - JWT_EXPIRATION=86400
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - EMAIL_FROM=${EMAIL_FROM}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    container_name: messaging-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=message_api
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # For development only - pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: messaging-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network
    profiles:
      - dev

volumes:
  postgres_data:
  pgadmin-data:

networks:
  app-network:
    driver: bridge
